name: Actions ðŸ˜Ž

on: [push, pull_request]



jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      # Log resources 

      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v4
        with:
          path: Unity/Evolutionary_Agents_Simulation/Library
          key: Library-${{ hashFiles('Unity/Evolutionary_Agents_Simulation/Assets/**', 'Unity/Evolutionary_Agents_Simulation/Packages/**', 'Unity/Evolutionary_Agents_Simulation/ProjectSettings/**') }}
          restore-keys: |
            Library-

    #  Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
      #    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          projectPath: Unity/Evolutionary_Agents_Simulation

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
       #   UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          allowDirtyBuild: true
          targetPlatform: WebGL
          projectPath: Unity/Evolutionary_Agents_Simulation

      # Output
      - uses: actions/upload-artifact@v4
        with:
          name: Build
          path: Unity/Evolutionary_Agents_Simulation/build
      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./Unity/Evolutionary_Agents_Simulation/build
      # Create Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # Upload Release Asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Unity/Evolutionary_Agents_Simulation/build/YourBuildFileName.zip
          asset_name: YourBuildFileName.zip
          asset_content_type: application/zip

